# syntax=docker/dockerfile:1.7

ARG NODE_VERSION=20.17.1
FROM node:${NODE_VERSION}-alpine AS base
WORKDIR /app
ENV CI=1 \
    HUSKY=0 \
    npm_config_audit=false \
    npm_config_fund=false

FROM base AS deps
COPY package.json ./
COPY package-lock.json* ./
RUN --mount=type=cache,target=/root/.npm \
    if [ -f package-lock.json ]; then \
      npm ci --legacy-peer-deps; \
    else \
      npm install --legacy-peer-deps; \
    fi

FROM base AS builder
ENV NODE_ENV=production
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN npm run build && find dist -name '*.map' -delete

FROM nginx:1.27-alpine AS runner
COPY deploy/frontend.nginx.conf /etc/nginx/conf.d/default.conf
COPY --from=builder /app/dist /usr/share/nginx/html
EXPOSE 80
HEALTHCHECK --interval=30s --timeout=5s --retries=3 CMD wget -qO- http://localhost/healthz || exit 1
CMD ["nginx", "-g", "daemon off;"]
