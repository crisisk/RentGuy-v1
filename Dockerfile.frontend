# syntax=docker/dockerfile:1.7

ARG NODE_VERSION=20.17.1
FROM node:${NODE_VERSION}-alpine AS base
WORKDIR /app
ENV CI=1

# Install dependencies once so we can reuse the layer between builds
FROM base AS deps
COPY package.json package-lock.json ./
RUN npm ci --include=dev

# Build the production bundle with only the files required by the scanner frontend
FROM base AS builder
ENV NODE_ENV=production
COPY --from=deps /app/node_modules ./node_modules
COPY package.json ./
COPY scripts ./scripts
COPY src ./src
COPY vendor ./vendor
COPY warehouse ./warehouse
COPY index.html ./index.html
RUN npm run build

# Minimal nginx runtime image to serve the static assets (<100MB total)
FROM nginx:1.27-alpine AS runner
WORKDIR /usr/share/nginx/html
RUN rm -f /etc/nginx/conf.d/default.conf
COPY deploy/frontend.nginx.conf /etc/nginx/conf.d/default.conf
COPY --from=builder /app/dist .
EXPOSE 80
HEALTHCHECK --interval=30s --timeout=5s --retries=3 CMD wget -qO- http://localhost/healthz || exit 1
CMD ["nginx", "-g", "daemon off;"]
